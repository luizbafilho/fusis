version: '2'

services:
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    privileged: true
    volumes:
      - ".:/go/src/github.com/luizbafilho/fusis/"
      - "/lib/modules:/lib/modules"
    depends_on:
      - etcd
    working_dir: /go/src/github.com/luizbafilho/fusis/
    command: sh -c "go build -o bin/fusis && bin/fusis balancer"
    networks:
      - default
      - vips

  test: &test
    build:
      context: .
      dockerfile: Dockerfile.dev
    privileged: true
    environment:
      ETCD_ENDPOINTS: 172.100.0.40:2379
    volumes:
      - ".:/go/src/github.com/luizbafilho/fusis/"
      - "/lib/modules:/lib/modules"
    working_dir: /go/src/github.com/luizbafilho/fusis/
    depends_on:
      - etcd
    command: go test -race ./...

  ci:
    <<: *test
    command: ./covertests.sh

  fusis:
    build:
      context: .
    privileged: true
    depends_on:
      - etcd
      - bird
    volumes:
      - "./fusis.toml:/etc/fusis.toml"
      - "/lib/modules:/lib/modules"
    networks:
      default:
        ipv4_address: 172.100.0.10

  bird:
    build:
      context: .
      dockerfile: Dockerfile.bird
    privileged: true
    volumes:
      - "./bird.conf:/etc/bird/bird.conf"
    networks:
      default:
        ipv4_address: 172.100.0.20

  etcd:
    environment:
      ETCDCTL_API: 3
      ETCD_DEBUG: "true"
    image: quay.io/coreos/etcd:v3.2.7
    command:
       /usr/local/bin/etcd
        --name docker-compose
        --listen-client-urls http://0.0.0.0:2379
        --advertise-client-urls http://0.0.0.0:2379
        --listen-peer-urls http://0.0.0.0:2380
        --initial-advertise-peer-urls http://0.0.0.0:2380
        --initial-cluster docker-compose=http://0.0.0.0:2380
        --initial-cluster-token my-etcd-token
        --initial-cluster-state new
    networks:
      default:
        ipv4_address: 172.100.0.40

  real:
    image: nginx:1.13
    networks:
      default:
        ipv4_address: 172.100.0.50

  e2e:
    image: docker
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: docker ps

networks:
  vips:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.0.0/24

  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.100.0.0/24

